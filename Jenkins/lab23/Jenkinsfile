pipeline {
    agent any

    environment {
        DOCKER_HUB_REPO = "abdallah1312/ivolve"
        KUBERNETES_DEPLOYMENT_FILE = "deployment.yaml"
        DOCKER_CREDENTIALS = "Docker-cred"
        DOCKER_IMAGE_NAME ="docker.io/ivolve"
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo 'Checking out code...'
                cleanWs()
                git branch: 'main', url: 'https://github.com/IbrahimAdell/Lab.git'
            }
        }

          stage('Build Docker Image') {
            steps {
                sh """
                    docker build -t ${DOCKER_IMAGE_NAME}:${env.BUILD_NUMBER} .
                """
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withDockerRegistry([credentialsId: 'task-ivolve', url: '']) {
                    sh """
                        docker push ${DOCKER_IMAGE_NAME}:${env.BUILD_NUMBER}
                        docker tag ${DOCKER_IMAGE_NAME}:${env.BUILD_NUMBER} ${DOCKER_IMAGE_NAME}:latest
                        docker push ${DOCKER_IMAGE_NAME}:latest
                    """
                }
            }
        }

        stage('Update Deployment YAML') {
            steps {
                script {
                    sh "sed -i 's|image: .*|image: ${DOCKER_HUB_REPO}:${env.BUILD_NUMBER}|' ${KUBERNETES_DEPLOYMENT_FILE}"
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh "kubectl apply --dry-run=client -f ${KUBERNETES_DEPLOYMENT_FILE}"
                    sh "kubectl apply -f ${KUBERNETES_DEPLOYMENT_FILE}"
                    sh "kubectl rollout status deployment/<deployment-name>"
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed! Check logs for details.'
        }
        always {
            echo "Cleaning up resources..."
            sh "docker rmi ${DOCKER_HUB_REPO}:${env.BUILD_NUMBER} || true"
        }
    }
}
